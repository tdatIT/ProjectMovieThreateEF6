<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>